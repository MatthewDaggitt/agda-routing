--------------------------------------------------------------------------------
-- Agda routing library
--
-- This module contains the definition of static schedules.
--------------------------------------------------------------------------------

module RoutingLib.Iteration.Asynchronous.Static.Schedule where

open import Level using (_⊔_)
open import Data.Nat using (ℕ; zero; suc; z≤n; s≤s; _≟_; _≤_; _+_)
open import Data.Nat.Properties using (n≤1+n; ≤-refl; ≤-trans)
open import Data.Fin using (Fin; zero; suc)
open import Data.Fin.Subset using (Subset; ⊤)

--------------------------------------------------------------------------------
-- Time --
--------------------------------------------------------------------------------
-- Some type definitions

-- Time
𝕋 : Set
𝕋 = ℕ

-- Time periods
open import RoutingLib.Data.Range public
  renaming (Range to TimePeriod; _∈_ to _∈ₜ_)

--------------------------------------------------------------------------------
-- Static schedules --
--------------------------------------------------------------------------------
-- A schedule dictating the flow of inforamtion within a computation
-- (ala Uresin & Dubois)
--
-- Schedules are represented as ψ

record Schedule (n : ℕ) : Set where
  field
    -- "α t" is the set of nodes that are active at time t
    α : (t : 𝕋) → Subset n
    -- "β t i j" is the time at which the data used by node i at time t was generated by node j
    β : (t : 𝕋) (i j : Fin n) → 𝕋

    -- Information can only be used after it is generated
    β-causality   : ∀ t i j → β (suc t) i j ≤ t

  -- Some derived properties
  β-decreasing : ∀ {t} i j → 1 ≤ t → β t i j ≤ t
  β-decreasing i j (s≤s z≤n) = ≤-trans (β-causality _ i j) (n≤1+n _)
