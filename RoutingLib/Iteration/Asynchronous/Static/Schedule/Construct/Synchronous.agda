--------------------------------------------------------------------------------
-- This module constructs the static schedule that corresponds to the fully
-- synchronous computation
--------------------------------------------------------------------------------

open import Data.Nat using (‚Ñï; zero; suc; _‚à∏_)

module RoutingLib.Iteration.Asynchronous.Static.Schedule.Construct.Synchronous
  {n : ‚Ñï} where

open import Data.Fin using (Fin)
open import Data.Fin.Subset using (Subset; ‚ä§)
open import Data.Fin.Subset.Properties using (‚àà‚ä§)
open import Data.Nat using (z‚â§n; s‚â§s; _‚â§_; _<_; _+_)
open import Data.Nat.Properties
open import Function using (const)

open import RoutingLib.Iteration.Asynchronous.Static.Schedule
import RoutingLib.Iteration.Asynchronous.Static.Schedule.Pseudoperiod
  as Pseudoperiod

--------------------------------------------------------------------------------
-- Definition

Œ±À¢ ∏‚Åø·∂ú : ùïã ‚Üí Subset n
Œ±À¢ ∏‚Åø·∂ú = const ‚ä§

Œ≤À¢ ∏‚Åø·∂ú : ùïã ‚Üí Fin n ‚Üí Fin n ‚Üí ùïã
Œ≤À¢ ∏‚Åø·∂ú t _ _ = t ‚à∏ 1

œàÀ¢ ∏‚Åø·∂ú : Schedule n
œàÀ¢ ∏‚Åø·∂ú = record
  { Œ±           = Œ±À¢ ∏‚Åø·∂ú
  ; Œ≤           = Œ≤À¢ ∏‚Åø·∂ú
  ; Œ≤-causality = Œª _ _ _ ‚Üí ‚â§-refl
  }

--------------------------------------------------------------------------------
-- Properties

open Pseudoperiod œàÀ¢ ∏‚Åø·∂ú

Œ≤À¢ ∏‚Åø·∂ú-expiry : ‚àÄ {t‚ÇÅ t‚ÇÇ} i j ‚Üí t‚ÇÅ < t‚ÇÇ ‚Üí t‚ÇÅ ‚â§ Œ≤À¢ ∏‚Åø·∂ú t‚ÇÇ i j
Œ≤À¢ ∏‚Åø·∂ú-expiry i j (s‚â§s t‚ÇÅ‚â§t‚ÇÇ) = t‚ÇÅ‚â§t‚ÇÇ

œàÀ¢ ∏‚Åø·∂ú-activeIn : ‚àÄ t i ‚Üí i IsActiveIn [ t , suc t ]
œàÀ¢ ∏‚Åø·∂ú-activeIn t i = mk‚Çê (suc t) ‚â§-refl ‚â§-refl ‚àà‚ä§

œàÀ¢ ∏‚Åø·∂ú-expiresIn : ‚àÄ t i ‚Üí MessagesTo i ExpireIn [ t , t ]
œàÀ¢ ∏‚Åø·∂ú-expiresIn t i = mk‚Çë ‚â§-refl (Œ≤À¢ ∏‚Åø·∂ú-expiry i)

œàÀ¢ ∏‚Åø·∂ú-pseudocycle : ‚àÄ t ‚Üí Pseudocycle [ t , suc t ]
œàÀ¢ ∏‚Åø·∂ú-pseudocycle t = record
  { m          = const t
  ; start‚â§end  = n‚â§1+n t
  ; start‚â§mid·µ¢ = const ‚â§-refl
  ; mid·µ¢‚â§end   = const (n‚â§1+n t)
  ; Œ≤[s,m]     = œàÀ¢ ∏‚Åø·∂ú-expiresIn t
  ; Œ±[m,e]     = œàÀ¢ ∏‚Åø·∂ú-activeIn t
  }

œàÀ¢ ∏‚Åø·∂ú-multiPseudocycle : ‚àÄ t k ‚Üí MultiPseudocycle k [ t , t + k ]
œàÀ¢ ∏‚Åø·∂ú-multiPseudocycle t zero    rewrite +-identity ≥ t = none
œàÀ¢ ∏‚Åø·∂ú-multiPseudocycle t (suc k) rewrite +-suc t k     =
  next (suc t) (œàÀ¢ ∏‚Åø·∂ú-pseudocycle t) (œàÀ¢ ∏‚Åø·∂ú-multiPseudocycle (suc t) k)
