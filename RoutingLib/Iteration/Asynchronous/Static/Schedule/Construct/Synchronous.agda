--------------------------------------------------------------------------------
-- This module constructs the static schedule that corresponds to the fully
-- synchronous computation
--------------------------------------------------------------------------------

open import Data.Nat using (‚Ñï; zero; suc; _‚à∏_)

module RoutingLib.Iteration.Asynchronous.Static.Schedule.Construct.Synchronous
  {n : ‚Ñï} where

open import Data.Fin using (Fin)
open import Data.Fin.Subset using (Subset; ‚ä§)
open import Data.Fin.Subset.Properties using (‚àà‚ä§)
open import Data.Nat using (z‚â§n; s‚â§s; _‚â§_; _<_; _+_)
open import Data.Nat.Properties

open import RoutingLib.Iteration.Asynchronous.Static.Schedule
import RoutingLib.Iteration.Asynchronous.Static.Schedule.Pseudoperiod
  as Pseudoperiod

--------------------------------------------------------------------------------
-- Definition

Œ±À¢ ∏‚Åø·∂ú : ùïã ‚Üí Subset n
Œ±À¢ ∏‚Åø·∂ú _ = ‚ä§

Œ≤À¢ ∏‚Åø·∂ú : ùïã ‚Üí Fin n ‚Üí Fin n ‚Üí ùïã
Œ≤À¢ ∏‚Åø·∂ú zero    _ _ = zero
Œ≤À¢ ∏‚Åø·∂ú (suc t) _ _ = t

œàÀ¢ ∏‚Åø·∂ú : Schedule n
œàÀ¢ ∏‚Åø·∂ú = record
  { Œ±           = Œ±À¢ ∏‚Åø·∂ú
  ; Œ≤           = Œ≤À¢ ∏‚Åø·∂ú
  ; Œ≤-causality = Œª _ _ _ ‚Üí ‚â§-refl
  }

--------------------------------------------------------------------------------
-- Properties

open Pseudoperiod œàÀ¢ ∏‚Åø·∂ú

Œ≤À¢ ∏‚Åø·∂ú-expiry : ‚àÄ {t‚ÇÅ t‚ÇÇ} i j ‚Üí t‚ÇÅ < t‚ÇÇ ‚Üí t‚ÇÅ ‚â§ Œ≤À¢ ∏‚Åø·∂ú t‚ÇÇ i j
Œ≤À¢ ∏‚Åø·∂ú-expiry i j (s‚â§s t‚ÇÅ‚â§t‚ÇÇ) = t‚ÇÅ‚â§t‚ÇÇ

œàÀ¢ ∏‚Åø·∂ú-activeIn : ‚àÄ t i ‚Üí i IsActiveIn [ t , suc t ]
œàÀ¢ ∏‚Åø·∂ú-activeIn t i = mk‚Çê·µ¢ (suc t) ‚â§-refl ‚â§-refl ‚àà‚ä§

œàÀ¢ ∏‚Åø·∂ú-activationPeriod : ‚àÄ t ‚Üí IsActivationPeriod [ t , suc t ]
œàÀ¢ ∏‚Åø·∂ú-activationPeriod t = mk‚Çê (n‚â§1+n t) (œàÀ¢ ∏‚Åø·∂ú-activeIn t)

œàÀ¢ ∏‚Åø·∂ú-expiryPeriod : ‚àÄ t ‚Üí IsExpiryPeriod [ t , t ]
œàÀ¢ ∏‚Åø·∂ú-expiryPeriod t = mk‚Çë ‚â§-refl Œ≤À¢ ∏‚Åø·∂ú-expiry

œàÀ¢ ∏‚Åø·∂ú-pseudoperiodic : ‚àÄ t ‚Üí IsPseudoperiodic [ t , suc t ]
œàÀ¢ ∏‚Åø·∂ú-pseudoperiodic t = record
  { m      = t
  ; Œ≤[s,m] = œàÀ¢ ∏‚Åø·∂ú-expiryPeriod t
  ; Œ±[m,e] = œàÀ¢ ∏‚Åø·∂ú-activationPeriod t
  }

œàÀ¢ ∏‚Åø·∂ú-multiPseudoperiodic : ‚àÄ t k ‚Üí IsMultiPseudoperiodic k [ t , t + k ]
œàÀ¢ ∏‚Åø·∂ú-multiPseudoperiodic t zero    rewrite +-identity ≥ t = none
œàÀ¢ ∏‚Åø·∂ú-multiPseudoperiodic t (suc k) rewrite +-suc t k     =
  next (suc t) (œàÀ¢ ∏‚Åø·∂ú-pseudoperiodic t) (œàÀ¢ ∏‚Åø·∂ú-multiPseudoperiodic (suc t) k)
