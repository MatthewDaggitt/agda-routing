--------------------------------------------------------------------------------
-- Agda routing library
--
-- This module contains an asynchronous implementation of an abstract vector
-- based routing protocol designed to solve the routing problem described by the
-- provided routing algebra.
--------------------------------------------------------------------------------

open import Relation.Binary.Indexed.Homogeneous using (IndexedDecSetoid)

open import RoutingLib.Iteration.Asynchronous.Dynamic
  using (IsAsyncIterable; AsyncIterable; asyncIter)
open import RoutingLib.Iteration.Asynchronous.Dynamic.Schedule
  using (Schedule; ùïã)

open import RoutingLib.Routing.Algebra
open import RoutingLib.Routing.Basics.Network using (Network)

module RoutingLib.Routing.VectorBased.Asynchronous
  {a b ‚Ñì} (algebra : RawRoutingAlgebra a b ‚Ñì)
  {n} (N : Network algebra n)
  where

open RawRoutingAlgebra algebra

------------------------------------------------------------------------
-- Publicly re-export core iteration and contents of routing

open import RoutingLib.Routing.Prelude algebra n public
  hiding (Network)

open import RoutingLib.Routing.Basics.Network.Participants algebra N public
  using (A‚Çú)
  
open import RoutingLib.Routing.VectorBased.Synchronous algebra public
  using (F; œÉ; F-cong)
  
------------------------------------------------------------------------
-- The iteration being computed during epoch e with participants p

F‚Ä≤ : Epoch ‚Üí Participants ‚Üí RoutingMatrix ‚Üí RoutingMatrix
F‚Ä≤ e p X = F (A‚Çú e p) X

F‚Ä≤-cong : ‚àÄ e p {X Y} ‚Üí X ‚âà‚Çò Y ‚Üí F‚Ä≤ e p X ‚âà‚Çò[ p ] F‚Ä≤ e p Y
F‚Ä≤-cong e p X‚âàY {i} _ j = F-cong (A‚Çú e p) X‚âàY i j

F‚Ä≤-isAsyncIterable : IsAsyncIterable _‚âà‚Çú_ F‚Ä≤ I
F‚Ä≤-isAsyncIterable = record
  { isDecEquivalence·µ¢ = IndexedDecSetoid.isDecEquivalence·µ¢ Dec‚ÑùùïÑ‚Çõ‚Å±
  ; F-cong            = F‚Ä≤-cong
  }

F‚à• : AsyncIterable a ‚Ñì n
F‚à• = record
  { isAsyncIterable = F‚Ä≤-isAsyncIterable
  }

------------------------------------------------------------------------
-- The asynchronous state function
--
-- Given a schedule "œà" and an initial state "X" then "Œ¥ œà X t" is
-- the resulting state at time "t"

Œ¥ : Schedule n ‚Üí RoutingMatrix ‚Üí ùïã ‚Üí RoutingMatrix
Œ¥ = asyncIter F‚à•

