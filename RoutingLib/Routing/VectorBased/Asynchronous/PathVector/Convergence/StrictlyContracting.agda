open import Data.Fin.Subset using (Subset; _‚àà_)
open import Data.Fin.Subset.Properties using (_‚àà?_)
open import Data.Nat hiding (_‚âü_)
open import Data.Nat.Properties hiding (_‚âü_; module ‚â§-Reasoning)
open import Data.Product using (_√ó_; _,_; proj‚ÇÅ; proj‚ÇÇ)
open import Data.Sum using (_‚äé_; inj‚ÇÅ; inj‚ÇÇ; swap)
open import Function using (_‚àò_)
open import Relation.Binary.PropositionalEquality
open import Relation.Nullary using (¬¨_; yes; no)
open import Relation.Nullary.Negation using (contradiction)

open import RoutingLib.Data.Table using (max)
open import RoutingLib.Data.Table.Properties using (max[t]<x; x‚â§max[t])
open import RoutingLib.Data.Nat.Properties using (module ‚â§-Reasoning; n‚â¢0‚áí0<n)
import RoutingLib.Function.Metric.Construct.Condition as Condition
import RoutingLib.Function.Metric as Metric
import RoutingLib.Relation.Nullary.Decidable as Dec

open import RoutingLib.Iteration.Asynchronous.Dynamic.Convergence.Conditions

open import RoutingLib.Routing using (Network)
open import RoutingLib.Routing.Algebra
import RoutingLib.Routing.Algebra.Properties.RoutingAlgebra as RoutingAlgebraProperties
import RoutingLib.Routing.Algebra.Properties.CertifiedPathAlgebra as PathAlgebraProperties
import RoutingLib.Routing.Algebra.Construct.Consistent as Consistent
import RoutingLib.Routing.VectorBased.Core as VectorBasedRoutingCore
import RoutingLib.Routing.VectorBased.Asynchronous as PathVector
import RoutingLib.Routing.VectorBased.Asynchronous.DistanceVector.Properties as DistanceVectorProperties
import RoutingLib.Routing.VectorBased.Asynchronous.PathVector.Properties as PathVectorProperties
import RoutingLib.Routing.VectorBased.Asynchronous.PathVector.Convergence.Metrics as Metrics
import RoutingLib.Routing.VectorBased.Asynchronous.PathVector.Convergence.Properties as MetricProperties
import RoutingLib.Routing.VectorBased.Asynchronous.DistanceVector.Convergence.Properties as DistanceVectorMetricProperties
import RoutingLib.Routing.VectorBased.Asynchronous.DistanceVector.Convergence.StrictlyContracting as DistanceVectorStrictlyContracting

open ‚â§-Reasoning

module RoutingLib.Routing.VectorBased.Asynchronous.PathVector.Convergence.StrictlyContracting
  {a b ‚Ñì n} {algebra : RawRoutingAlgebra a b ‚Ñì}
  (isRoutingAlgebra : IsRoutingAlgebra algebra)
  (isPathAlgebra : IsCertifiedPathAlgebra algebra n)
  (isStrictlyIncreasing : IsStrictlyIncreasing algebra)
  (network : Network algebra n)
  (1‚â§n : 1 ‚â§ n)
  where

open RawRoutingAlgebra algebra
open IsCertifiedPathAlgebra isPathAlgebra
open PathAlgebraProperties isRoutingAlgebra isPathAlgebra

open PathVector algebra network hiding (F)

module _ {e : Epoch} {p : Subset n} where

  private
    F : RoutingMatrix ‚Üí RoutingMatrix
    F = F‚Ä≤ e p

    A : AdjacencyMatrix
    A = A‚Çú e p


  open Metrics isRoutingAlgebra isPathAlgebra A public
  open MetricProperties isRoutingAlgebra isPathAlgebra A 1‚â§n p public

  open Consistent isRoutingAlgebra isPathAlgebra A
  open VectorBasedRoutingCore algebra·∂ú A·∂ú using () renaming (F to F·∂ú)
  open PathVectorProperties isRoutingAlgebra isPathAlgebra A

  private
    module DVP  = DistanceVectorMetricProperties isRoutingAlgebra·∂ú isFinite·∂ú
    module DVSC = DistanceVectorStrictlyContracting isRoutingAlgebra·∂ú isFinite·∂ú (isStrictlyIncreasing·∂ú isStrictlyIncreasing)

  ------------------------------------------------------------------------
  -- r‚Å± is contracting in the right way

  r‚Å±-strContrOrbits-FX : ‚àÄ {X i j} ‚Üí ùë∞ (F X i j) ‚Üí
                          ‚àÄ {v} ‚Üí (‚àÄ k l ‚Üí r (X k l) (F X k l) ‚â§ v) ‚Üí
                          H·∂ú + h‚Å± (F X i j) < v
  r‚Å±-strContrOrbits-FX {X} {i} {j} FX·µ¢‚±º‚Å± {v} r‚â§v with FX·µ¢‚±º‚Å±‚áíX‚Çñ‚±º‚Å±‚ââFX‚Çñ‚±º X i j FX·µ¢‚±º‚Å±
  ... | (k , X‚Çñ‚±º‚ââFX‚Çñ‚±º , X‚Çñ‚±º‚Å± , |X‚Çñ‚±º|<|FX·µ¢‚±º|) = begin
    H·∂ú + h‚Å± (F X i j)                 <‚ü® +-mono ≥-< H·∂ú (h‚Å±-mono X‚Çñ‚±º‚Å± FX·µ¢‚±º‚Å± |X‚Çñ‚±º|<|FX·µ¢‚±º|) ‚ü©
    H·∂ú + h‚Å± (X k j)                   ‚â§‚ü® +-mono ≥-‚â§ H·∂ú (m‚â§m‚äîn _ _) ‚ü©
    H·∂ú + (h‚Å± (X k j) ‚äî h‚Å± (F X k j))  ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl X‚Çñ‚±º‚ââFX‚Çñ‚±º (inj‚ÇÅ X‚Çñ‚±º‚Å±) ‚ü©
    r (X k j) (F X k j)               ‚â§‚ü® r‚â§v k j ‚ü©
    v                                 ‚àé

  r‚Å±-strContrOrbits-F¬≤X : ‚àÄ {X i j} ‚Üí ùë∞ (F (F X) i j) ‚Üí
                           ‚àÄ {v} ‚Üí (‚àÄ k l ‚Üí r (X k l) (F X k l) ‚â§ v) ‚Üí
                           H·∂ú + h‚Å± (F (F X) i j) < v
  r‚Å±-strContrOrbits-F¬≤X {X} {i} {j} F¬≤X·µ¢‚±º‚Å± {v} r‚â§v with FX·µ¢‚±º‚Å±‚áíX‚Çñ‚±º‚Å±‚ââFX‚Çñ‚±º (F X) i j F¬≤X·µ¢‚±º‚Å±
  ... | (l , _ , FX‚Çó‚±º‚Å± , |FX‚Çó‚±º|<|F¬≤X‚Çó‚±º|) with FX·µ¢‚±º‚Å±‚áíX‚Çñ‚±º‚Å±‚ââFX‚Çñ‚±º X l j FX‚Çó‚±º‚Å±
  ...   | (k , X‚Çñ‚±º‚ââFX‚Çñ‚±º , X‚Çñ‚±º‚Å± , |X‚Çñ‚±º|<|FX‚Çñ‚±º|) = begin
    H·∂ú + h‚Å± (F (F X) i j)             <‚ü® +-mono ≥-< H·∂ú (h‚Å±-mono X‚Çñ‚±º‚Å± F¬≤X·µ¢‚±º‚Å± (<-trans |X‚Çñ‚±º|<|FX‚Çñ‚±º| |FX‚Çó‚±º|<|F¬≤X‚Çó‚±º|)) ‚ü©
    H·∂ú + h‚Å± (X k j)                   ‚â§‚ü® +-mono ≥-‚â§ H·∂ú (m‚â§m‚äîn _ _) ‚ü©
    H·∂ú + (h‚Å± (X k j) ‚äî h‚Å± (F X k j))  ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl X‚Çñ‚±º‚ââFX‚Çñ‚±º (inj‚ÇÅ X‚Çñ‚±º‚Å±) ‚ü©
    r (X k j) (F X k j)               ‚â§‚ü® r‚â§v k j ‚ü©
    v                                 ‚àé

  r‚Å±-strContrOnùë™ : ‚àÄ {X Y i j} ‚Üí ùë™‚Çò X ‚Üí ùë∞ (F Y i j) ‚Üí
                    ‚àÄ {v} ‚Üí (‚àÄ k l ‚Üí r (X k l) (Y k l) ‚â§ v) ‚Üí
                    H·∂ú + r‚Å± (F X i j) (F Y i j) < v
  r‚Å±-strContrOnùë™ {X} {Y} {i} {j} X·∂ú FY·µ¢‚±º‚Å± {v} r‚â§v with FX·µ¢‚±º‚Å±‚âàA·µ¢‚Çñ‚ñ∑X‚Çñ‚±º Y i j FY·µ¢‚±º‚Å±
  ... | (k , FY·µ¢‚±º‚âàA·µ¢‚ÇñY‚Çñ‚±º , Y‚Çñ‚±º‚Å±) = begin
    H·∂ú + r‚Å± (F X i j) (F Y i j)  ‚â°‚ü® cong (H·∂ú +_) (r‚Å±x·∂úy‚Å±‚â°h‚Å±y‚Å± (F-pres-ùë™‚Çò X·∂ú i j) FY·µ¢‚±º‚Å±) ‚ü©
    H·∂ú + h‚Å± (F Y i j)            ‚â°‚ü® cong (H·∂ú +_) (h‚Å±-cong FY·µ¢‚±º‚âàA·µ¢‚ÇñY‚Çñ‚±º) ‚ü©
    H·∂ú + h‚Å± (A i k ‚ñ∑ Y k j)      <‚ü® +-mono ≥-< H·∂ú (h‚Å±-decr (ùë∞-cong FY·µ¢‚±º‚âàA·µ¢‚ÇñY‚Çñ‚±º FY·µ¢‚±º‚Å±)) ‚ü©
    H·∂ú + h‚Å± (Y k j)              ‚â°‚ü® cong (H·∂ú +_) (sym (r‚Å±x·∂úy‚Å±‚â°h‚Å±y‚Å± (X·∂ú k j) Y‚Çñ‚±º‚Å±)) ‚ü©
    H·∂ú + r‚Å± (X k j) (Y k j)      ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl (ùë™ùë∞‚áí‚ââ (X·∂ú k j) Y‚Çñ‚±º‚Å±) (inj‚ÇÇ Y‚Çñ‚±º‚Å±) ‚ü©
    r (X k j) (Y k j)            ‚â§‚ü® r‚â§v k j ‚ü©
    v                            ‚àé
    where open ‚â§-Reasoning

  r‚Å±-strContrOrbits : ‚àÄ {X i j} ‚Üí ùë∞ (F X i j) ‚äé ùë∞ (F (F X) i j) ‚Üí
                       ‚àÄ {v} ‚Üí (‚àÄ k l ‚Üí r (X k l) (F X k l) ‚â§ v) ‚Üí
                       H·∂ú + r‚Å± (F X i j) (F (F X) i j) < v
  r‚Å±-strContrOrbits {X} {i} {j} FX·µ¢‚±º‚Å±‚äéF¬≤X·µ¢‚±º‚Å± {v} r‚â§v with ‚â§-total (h‚Å± (F X i j)) (h‚Å± (F (F X) i j))
  ... | inj‚ÇÅ h‚Å±FX·µ¢‚±º‚â§h‚Å±F¬≤X·µ¢‚±º = subst (_< v) (sym (cong (H·∂ú +_) (m‚â§n‚áím‚äîn‚â°n h‚Å±FX·µ¢‚±º‚â§h‚Å±F¬≤X·µ¢‚±º))) (r‚Å±-strContrOrbits-F¬≤X (h‚Å±-force-ùë∞ FX·µ¢‚±º‚Å±‚äéF¬≤X·µ¢‚±º‚Å± h‚Å±FX·µ¢‚±º‚â§h‚Å±F¬≤X·µ¢‚±º) r‚â§v)
  ... | inj‚ÇÇ h‚Å±F¬≤X·µ¢‚±º‚â§h‚Å±FX·µ¢‚±º = subst (_< v) (sym (cong (H·∂ú +_) (m‚â§n‚áín‚äîm‚â°n h‚Å±F¬≤X·µ¢‚±º‚â§h‚Å±FX·µ¢‚±º))) (r‚Å±-strContrOrbits-FX {X} {i} {j} (h‚Å±-force-ùë∞ (swap FX·µ¢‚±º‚Å±‚äéF¬≤X·µ¢‚±º‚Å±) h‚Å±F¬≤X·µ¢‚±º‚â§h‚Å±FX·µ¢‚±º) r‚â§v)


  ------------------------------------------------------------------------
  -- r·∂ú is contracting in the right way

  r·∂ú-strContr-ùë™ùë™ : ‚àÄ {X Y} ‚Üí (X·∂ú : ùë™‚Çò X) (Y·∂ú : ùë™‚Çò Y) ‚Üí
                   ‚àÄ {i j} (FX·µ¢‚±º·∂ú : ùë™ (F X i j)) (FY·µ¢‚±º·∂ú : ùë™ (F Y i j)) ‚Üí
                   ‚àÄ {v} ‚Üí 0 < v ‚Üí (‚àÄ k l ‚Üí r (X k l) (Y k l) ‚â§ v) ‚Üí
                   r·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú < v
  r·∂ú-strContr-ùë™ùë™ {X} {Y} X·∂ú Y·∂ú {i} {j} FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú {v} 0<v r‚â§v = begin
    r·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú                           ‚â°‚ü®‚ü©
    DV.r (toCRoute FX·µ¢‚±º·∂ú) (toCRoute FY·µ¢‚±º·∂ú)   ‚â°‚ü® DVP.r-cong ‚âà-refl ‚âà-refl ‚ü©
    DV.r (cFX i j) (cFY i j)                 ‚â°‚ü® DVP.r-cong (F-toCMatrix-commute X·∂ú (F-pres-ùë™‚Çò X·∂ú) i j) (F-toCMatrix-commute Y·∂ú (F-pres-ùë™‚Çò Y·∂ú) i j) ‚ü©
    DV.r (F·∂ú cX i j) (F·∂ú cY i j)             <‚ü® DVSC.r[FX·µ¢‚±º,FY·µ¢‚±º]<v A·∂ú cX cY i j 0<v d‚â§v ‚ü©
    v                                        ‚àé
    where
    cX  = toCMatrix X·∂ú
    cFX = toCMatrix (F-pres-ùë™‚Çò X·∂ú)
    cY  = toCMatrix Y·∂ú
    cFY = toCMatrix (F-pres-ùë™‚Çò Y·∂ú)
    d‚â§v : ‚àÄ k ‚Üí cX k j ‚ââ·∂ú cY k j ‚Üí DV.r (cX k j) (cY k j) ‚â§ v
    d‚â§v k cX‚Çñ‚±º‚ââcY‚Çñ‚±º = begin
      DV.r (cX k j) (cY k j) ‚â°‚ü®‚ü©
      r·∂ú  (X·∂ú k j) (Y·∂ú k j) ‚â°‚ü® r·∂ú‚â°r (X·∂ú k j) (Y·∂ú k j) ‚âà-refl ‚âà-refl cX‚Çñ‚±º‚ââcY‚Çñ‚±º ‚ü©
      r   (X k j)  (Y k j)  ‚â§‚ü® r‚â§v k j ‚ü©
      v                      ‚àé
      where open ‚â§-Reasoning

  r·∂ú-strContr-ùë™ùë∞ : ‚àÄ {X Y i j} ‚Üí (ùë∞‚Çò X √ó ùë™‚Çò Y) ‚äé (ùë™‚Çò X √ó ùë∞‚Çò Y) ‚Üí
                   (FX·µ¢‚±º·∂ú : ùë™ (F X i j)) (FY·µ¢‚±º·∂ú : ùë™ (F Y i j)) ‚Üí
                   ‚àÄ {v} ‚Üí (‚àÄ k l ‚Üí r (X k l) (Y k l) ‚â§ v) ‚Üí
                   r·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú < v
  r·∂ú-strContr-ùë™ùë∞ {X} {Y} (inj‚ÇÅ (X‚Å± , Y·∂ú)) FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú {v} r‚â§v with ùë∞‚Çò-witness X‚Å±
  ...   | (k , l , X‚Çñ‚Çó‚Å±) = begin
    r·∂ú FX·µ¢‚±º·∂ú  FY·µ¢‚±º·∂ú            <‚ü® r·∂ú<H·∂ú+x FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú _ ‚ü©
    H·∂ú + r‚Å± (X k l) (Y k l)  ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl (ùë™ùë∞‚áí‚ââ (Y·∂ú k l) X‚Çñ‚Çó‚Å± ‚àò ‚âà-sym) (inj‚ÇÅ X‚Çñ‚Çó‚Å±) ‚ü©
    r (X k l) (Y k l)        ‚â§‚ü® r‚â§v k l ‚ü©
    v                        ‚àé
    where open ‚â§-Reasoning
  r·∂ú-strContr-ùë™ùë∞ {X} {Y} (inj‚ÇÇ (X·∂ú , Y‚Å±)) FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú {v} r‚â§v with ùë∞‚Çò-witness Y‚Å±
  ... | (k , l , Y‚Çñ‚Çó‚Å±) = begin
    r·∂ú FX·µ¢‚±º·∂ú  FY·µ¢‚±º·∂ú            <‚ü® r·∂ú<H·∂ú+x FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú _ ‚ü©
    H·∂ú + r‚Å± (X k l) (Y k l)  ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl (ùë™ùë∞‚áí‚ââ (X·∂ú k l) Y‚Çñ‚Çó‚Å±) (inj‚ÇÇ Y‚Çñ‚Çó‚Å±) ‚ü©
    r (X k l) (Y k l)        ‚â§‚ü® r‚â§v k l ‚ü©
    v                        ‚àé
    where open ‚â§-Reasoning

  r·∂ú-strContrOrbits : ‚àÄ {X i j} ‚Üí
                       (FX·µ¢‚±º·∂ú : ùë™ (F X i j)) (F¬≤X·µ¢‚±º·∂ú : ùë™ (F (F X) i j)) ‚Üí
                       ‚àÄ {v} ‚Üí 0 < v ‚Üí (‚àÄ k l ‚Üí r (X k l) (F X k l) ‚â§ v) ‚Üí
                       r·∂ú FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú < v
  r·∂ú-strContrOrbits {X} {i} {j} FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú {v} 0<v r‚â§v with ùë™‚Çò? X | ùë™‚Çò? (F X)
  ... | yes X·∂ú | yes FX·∂ú = r·∂ú-strContr-ùë™ùë™ X·∂ú FX·∂ú FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú 0<v r‚â§v
  ... | yes X·∂ú | no  FX‚Å± = contradiction (F-pres-ùë™‚Çò X·∂ú) FX‚Å±
  ... | no  X‚Å± | yes FX·∂ú = r·∂ú-strContr-ùë™ùë∞ (inj‚ÇÅ (X‚Å± , FX·∂ú)) FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú r‚â§v
  ... | no  X‚Å± | no  FX‚Å± with ùë∞‚Çò-witness FX‚Å±
  ...   | (m , n , FX‚Çò‚Çô‚Å±) with FX·µ¢‚±º‚Å±‚áíX‚Çñ‚±º‚Å±‚ââFX‚Çñ‚±º X m n FX‚Çò‚Çô‚Å±
  ...     | (k , X‚Çñ‚Çô‚ââFX‚Çñ‚Çô , X‚Çñ‚Çô‚Å± , _) = begin
    r·∂ú FX·µ¢‚±º·∂ú  F¬≤X·µ¢‚±º·∂ú            <‚ü® r·∂ú<H·∂ú+x FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú _ ‚ü©
    H·∂ú + r‚Å± (X k n) (F X k n) ‚â°‚ü® H+r‚Å±‚â°r ‚âà-refl ‚âà-refl X‚Çñ‚Çô‚ââFX‚Çñ‚Çô (inj‚ÇÅ X‚Çñ‚Çô‚Å±) ‚ü©
    r (X k n) (F X k n)       ‚â§‚ü® r‚â§v k n ‚ü©
    v                         ‚àé
    where open ‚â§-Reasoning

  r·∂ú-strContrOnùë™ : ‚àÄ {X Y} ‚Üí ùë™‚Çò X ‚Üí
                    ‚àÄ {i j} ‚Üí (FX·µ¢‚±º·∂ú : ùë™ (F X i j)) (FY·µ¢‚±º·∂ú : ùë™ (F Y i j)) ‚Üí
                    ‚àÄ {v} ‚Üí 0 < v ‚Üí (‚àÄ k l ‚Üí r (X k l) (Y k l) ‚â§ v) ‚Üí
                    r·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú < v
  r·∂ú-strContrOnùë™ {X} {Y} X·∂ú {i} {j} FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú 0<v r‚â§v with ùë™‚Çò? Y
  ... | yes Y·∂ú = r·∂ú-strContr-ùë™ùë™ X·∂ú Y·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú 0<v r‚â§v
  ... | no  Y‚Å± = r·∂ú-strContr-ùë™ùë∞ (inj‚ÇÇ (X·∂ú , Y‚Å±)) FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú r‚â§v


  ------------------------------------------------------------------------
  -- r is contracting in the right way

  r-strContrOrbits : ‚àÄ {X} ‚Üí
                     ‚àÄ {v} ‚Üí 0 < v ‚Üí (‚àÄ k l ‚Üí r (X k l) (F X k l) ‚â§ v) ‚Üí
                     ‚àÄ i j ‚Üí r (F X i j) (F (F X) i j) < v
  r-strContrOrbits {X} 0<v r‚â§v i j
    with F X i j ‚âü F (F X) i j | ùë™? (F X i j) | ùë™? (F (F X) i j)
  ... | yes FX·µ¢‚±º‚âàF¬≤X·µ¢‚±º | _         | _          = 0<v
  ... | no  _          | yes FX·µ¢‚±º·∂ú | yes F¬≤X·µ¢‚±º·∂ú  = r·∂ú-strContrOrbits FX·µ¢‚±º·∂ú F¬≤X·µ¢‚±º·∂ú 0<v r‚â§v
  ... | no  _          | no  FX·µ¢‚±º‚Å± | _          = r‚Å±-strContrOrbits (inj‚ÇÅ FX·µ¢‚±º‚Å±) r‚â§v
  ... | no  _          | yes _     | no  F¬≤X·µ¢‚±º‚Å± = r‚Å±-strContrOrbits (inj‚ÇÇ F¬≤X·µ¢‚±º‚Å±) r‚â§v

  r-strContrOnùë™ : ‚àÄ {X Y} ‚Üí ùë™‚Çò X ‚Üí
                   ‚àÄ {v} ‚Üí 0 < v ‚Üí (‚àÄ k l ‚Üí r (X k l) (Y k l) ‚â§ v) ‚Üí
                   ‚àÄ i j ‚Üí r (F X i j) (F Y i j) < v
  r-strContrOnùë™ {X} {Y} X·∂ú 0<v r‚â§v i j
    with F X i j ‚âü F Y i j | ùë™? (F X i j) | ùë™? (F Y i j)
  ... | yes FX·µ¢‚±º‚âàFY·µ¢‚±º | _         | _         = 0<v
  ... | no  FX·µ¢‚±º‚ââFY·µ¢‚±º | yes FX·µ¢‚±º·∂ú  | yes FY·µ¢‚±º·∂ú = r·∂ú-strContrOnùë™ X·∂ú FX·µ¢‚±º·∂ú FY·µ¢‚±º·∂ú 0<v r‚â§v
  ... | no  FX·µ¢‚±º‚ââFY·µ¢‚±º | yes _     | no  FY·µ¢‚±º‚Å± = r‚Å±-strContrOnùë™ X·∂ú FY·µ¢‚±º‚Å± r‚â§v
  ... | no  FX·µ¢‚±º‚ââFY·µ¢‚±º | no  FX·µ¢‚±º‚Å± | _         = contradiction (F-pres-ùë™‚Çò X·∂ú i j) FX·µ¢‚±º‚Å±

------------------------------------------------------------------------
-- d is contracting in the right ways

-- These two lemmas are a mess as can't pattern match on `i ‚àà? p` directly
-- as it unfolds the adjacency matrix

  d[FX·µ¢,F¬≤X·µ¢]<D[X,FX] : ‚àÄ {X} ‚Üí WellFormed p X ‚Üí F X ‚ââ‚Çò[ p ] X ‚Üí
                  ‚àÄ i ‚Üí d·∂ú p i (F X i) (F (F X) i) < D p X (F X)
  d[FX·µ¢,F¬≤X·µ¢]<D[X,FX] {X} wfX FX‚ââX i with Y‚ââ‚ÇöX‚áí0<DXY p FX‚ââX
  ... | 0<DXY with max[t]<x 0<DXY (r-strContrOrbits 0<DXY (r‚â§D-wf p wfX (F‚Ä≤-inactive network e p X)) i)
  ...   | d[FX·µ¢,F¬≤X·µ¢]<D[X,FX] = Dec.[
        (Œª i‚ààp ‚Üí subst (_< D p X (F X)) (sym (Condition.accept d (_‚àà? p) i‚ààp)) d[FX·µ¢,F¬≤X·µ¢]<D[X,FX]) ,
        (Œª i‚àâp ‚Üí subst (_< D p X (F X)) (sym (Condition.reject d (_‚àà? p) i‚àâp)) 0<DXY)
      ] (i ‚àà? p)

  d‚ÇúFX·µ¢FY·µ¢<DXY : ‚àÄ {X Y} ‚Üí WellFormed p X ‚Üí WellFormed p Y ‚Üí Y ‚ââ‚Çò[ p ] X ‚Üí
                 ùë™‚Çò X ‚Üí ‚àÄ i ‚Üí d·∂ú p i (F X i) (F Y i) < D p X Y
  d‚ÇúFX·µ¢FY·µ¢<DXY {X} {Y} wfX wfY Y‚ââX X·∂ú i with Y‚ââ‚ÇöX‚áí0<DXY p Y‚ââX
  ... | 0<DXY with max[t]<x 0<DXY (r-strContrOnùë™ X·∂ú 0<DXY (r‚â§D-wf p wfX wfY) i)
  ...   | d[FX·µ¢,F¬≤X·µ¢]<D[X,FX] = Dec.[
        (Œª i‚ààp ‚Üí subst (_< D p X Y) (sym (Condition.accept d (_‚àà? p) i‚ààp)) d[FX·µ¢,F¬≤X·µ¢]<D[X,FX]) ,
        (Œª i‚àâp ‚Üí subst (_< D p X Y) (sym (Condition.reject d (_‚àà? p) i‚àâp)) 0<DXY)
      ] (i ‚àà? p)

------------------------------------------------------------------------
-- D is contracting in the right ways

  F‚Çú-strContrOnOrbits : ‚àÄ {X} ‚Üí WellFormed p X ‚Üí (F X) ‚ââ‚Çò[ p ] X ‚Üí
                       D p (F X) (F (F X)) < D p X (F X)
  F‚Çú-strContrOnOrbits {X} wfX FX‚ââX = max[t]<x (Y‚ââ‚ÇöX‚áí0<DXY p FX‚ââX) (d[FX·µ¢,F¬≤X·µ¢]<D[X,FX] wfX FX‚ââX)

  F‚Çú-strContrOnùë™ : ‚àÄ {X Y} ‚Üí WellFormed p X ‚Üí WellFormed p Y ‚Üí Y ‚ââ‚Çò[ p ] X ‚Üí ùë™‚Çò X ‚Üí
                   D p (F X) (F Y) < D p X Y
  F‚Çú-strContrOnùë™ wfX wfY Y‚ââX X·∂ú = max[t]<x (Y‚ââ‚ÇöX‚áí0<DXY p Y‚ââX) (d‚ÇúFX·µ¢FY·µ¢<DXY wfX wfY Y‚ââX X·∂ú)

  F‚Çú-strContrOnFP : ‚àÄ {X} ‚Üí WellFormed p X ‚Üí ‚àÄ {X*} ‚Üí F X* ‚âà‚Çò X* ‚Üí X ‚ââ‚Çò[ p ] X* ‚Üí
                   D p X* (F X) < D p X* X
  F‚Çú-strContrOnFP {X} wfX {X*} FX*‚âàX* X‚ââX* = begin
    D p X*     (F X) ‚â°‚ü® D-cong p (‚âà‚Çò-sym FX*‚âàX*) (‚âà‚Çò-refl {x = F‚Ä≤ e p X}) ‚ü©
    D p (F X*) (F X) <‚ü® F‚Çú-strContrOnùë™ (X*-wf network e p FX*‚âàX*) wfX X‚ââX* (fixedPoint·∂ú FX*‚âàX*) ‚ü©
    D p X*     X     ‚àé
    where open ‚â§-Reasoning

open DistanceVectorProperties isRoutingAlgebra network

F‚à•-isAMCO : AMCO F‚à•
F‚à•-isAMCO = record
  { d·µ¢                   = Œª e p ‚Üí d {e} {p}
  ; d·µ¢-isQuasiSemiMetric = Œª e p i ‚Üí d-isQuasiSemiMetric
  ; d·µ¢-bounded           = Œª e p ‚Üí proj‚ÇÅ d-bounded , proj‚ÇÇ d-bounded
  ; F-strContrOnOrbits  = F‚Çú-strContrOnOrbits
  ; F-strContrOnFP      = F‚Çú-strContrOnFP
  ; F-inactive          = F‚Ä≤-inactive
  }
